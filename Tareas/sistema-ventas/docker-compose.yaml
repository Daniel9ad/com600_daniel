services:
  # Nginx - Gateway/Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: nginx-gateway
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      # - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - ms-auth
      - ms-eventos
      - ms-compras
    networks:
      - microservices-network
    restart: unless-stopped

  # Base de datos
  db:
    image: postgres:16docker 
    container_name: db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - microservices-network
    restart: unless-stopped

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"    # AMQP port
      - "15672:15672"  # Management UI
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      # - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
      # - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    networks:
      - microservices-network
    restart: unless-stopped

  # Microservicio de Autenticaci√≥n (NestJS)
  ms-auth:
    build:
      context: ./ms-auth
      dockerfile: Dockerfile
    container_name: ms-auth
    ports:
      - "3001:3000"
    environment:
      - PORT=3000 
      - MODE_ENV=production
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=auth_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
    depends_on:
      - db
    networks:
      - microservices-network
    restart: unless-stopped

  # Microservicio de Eventos (Go + Gin)
  ms-eventos:
    build:
      context: ./ms-eventos
      dockerfile: Dockerfile
    container_name: ms-eventos
    ports:
      - "3002:8080"
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=eventos_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
    depends_on:
      - db
    networks:
      - microservices-network
    restart: unless-stopped

  # Microservicio de Compras (Python + FastAPI)
  ms-compras:
    build:
      context: ./ms-compras
      dockerfile: Dockerfile
    container_name: ms-compras
    ports:
      - "3003:8000"
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=compras_db
      - DB_USER=compras_user
      - DB_PASSWORD=compras_password
      - RABBITMQ_HOST=localhost
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_QUEUE=notificaciones
    depends_on:
      - db
    networks:
      - microservices-network
    restart: unless-stopped


  # Microservicio de Notificaciones (Python Consumer)
  ms-notificaciones:
    build:
      context: ./ms-notificaciones
      dockerfile: Dockerfile
    container_name: ms-notificaciones
    environment:
      - RABBITMQ_HOST=localhost
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_QUEUE=notificaciones
      - SMTP_SERVER=smtp.gmail.com
      - SMTP_PORT=587
      - EMAIL_USERNAME=your-email@gmail.com
      - EMAIL_PASSWORD=your-app-password
      - EMAIL_FROM=your-email@gmail.com
    depends_on:
      - rabbitmq
    networks:
      - microservices-network
    restart: unless-stopped

volumes:
  db_data:
  rabbitmq_data:

# Red personalizada
networks:
  microservices-network:
    driver: bridge