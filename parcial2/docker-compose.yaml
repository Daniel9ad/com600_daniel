services:
  # Nginx - Gateway/Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: nginx-gateway
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      # - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - ms-auth
      - ms-eventos
      - ms-compras
    networks:
      - microservices-network
    restart: unless-stopped

  # Base de datos
  db_posgres:
    image: postgres:16
    container_name: db_posgres
    environment:
      - POSTGRES_DB=db_reserva
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - db_data_postgres:/var/lib/postgresql/data
      # - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - microservices-network
    restart: unless-stopped

  #MYSQL Database
  db_mysql:
    image: mysql
    container_name: db_mysql
    volumes:
      - db_data_mysql:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=db_login
      - MYSQL_USER=root
      - MYSQL_PASSWORD=root
    ports:
      - "3306:3306"
    networks:
      - microservices-network
    restart: unless-stopped

  # MongoDB Database
  db_mongodb:
    image: mongo:4.4
    container_name: db_mongodb
    volumes:
      - db_data_mongodb:/data/db
    ports:
      - "27017:27017"
    networks:
      - microservices-network
    restart: unless-stopped

  ms-login:
    build:
      context: ./ms-login
      dockerfile: Dockerfile
    container_name: ms-login
    ports:
      - "3001:3000"
    environment:
      - PORT=3000 
      - MODE_ENV=development
      - DB_HOST=db_mysql
      - DB_PORT=3306
      - DB_NAME=db_login
      - DB_USERNAME=root
      - DB_PASSWORD=root
    depends_on:
      - db_mysql
    networks:
      - microservices-network
    restart: unless-stopped

  ms-habitacion:
    build:
      context: ./ms-habitacion
      dockerfile: Dockerfile
    container_name: ms-habitacion
    ports:
      - "3002:3000"
    environment:
      - DB_HOST=db_mongodb
      - DB_PORT=27017
    depends_on:
      - db_mongodb
    networks:
      - microservices-network
    restart: unless-stopped

  ms-reserva:
    build:
      context: ./ms-reserva
      dockerfile: Dockerfile
    container_name: ms-reserva
    ports:
      - "3003:3000"
    environment:
      - DB_HOST=db_posgres
      - DB_PORT=5432
      - DB_NAME=reservas_db
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
    depends_on:
      - db_posgres
    networks:
      - microservices-network
    restart: unless-stopped


volumes:
  db_data_postgres:
    driver: local
  db_data_mysql:
    driver: local
  db_data_mongodb:
    driver: local

# Red personalizada
networks:
  microservices-network:
    driver: bridge