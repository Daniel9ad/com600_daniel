services:
  # Nginx - Gateway/Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: nginx-gateway
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - ms-usuarios
      - ms-reservas
      - ms-eventos
    networks:
      - app-network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        
  # Mysql
  mysql-db:
    image: mysql:latest
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: user
      MYSQL_DATABASE: db_usuarios
      MYSQL_USER: user
      MYSQL_PASSWORD: user
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Postgresql
  postgresql:
    image: postgres:16
    container_name: postgresql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: db_reservas
      TZ: America/La_Paz
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # MongoDB
  mongo-db:
    image: mongo:4.4
    container_name: mongo-db
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo --quiet --username root --password example --authenticationDatabase admin localhost:27017/test
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ms-usuarios
  ms-usuarios:
    build:
      context: ./ms-usuarios
      dockerfile: Dockerfile
    container_name: ms-usuarios
    ports:
      - "3001:3000"
    environment:
      - PORT=3000 
      - MODE_ENV=production
      - DB_HOST=mysql-db
      - DB_PORT=3306
      - DB_DATABASE=db_usuarios
      - DB_USERNAME=user
      - DB_PASSWORD=user
      - JWT_SECRET=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ1.ey
      - JWT_EXPIRES_IN=1h
    depends_on:
      - mysql-db
    networks:
      - app-network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ms-reservas
  ms-reservas:
    build:
      context: ./ms-reservas
      dockerfile: Dockerfile
    container_name: ms-reservas
    ports:
      - "3002:3000"
    environment:
      - PORT=3000
      - DB_HOST=postgresql
      - DB_PORT=5432
      - DB_DATABASE=db_reservas
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
    depends_on:
      - postgresql
    networks:
      - app-network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ms-eventos
  ms-eventos:
    build:
      context: ./ms-eventos
      dockerfile: Dockerfile
    container_name: ms-eventos
    restart: unless-stopped
    environment:
      JWT_SECRET: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ1.ey
      PORT: 3001
      MONGO_URI: mongodb://root:example@mongo-db:27017/eventos?authSource=admin
    ports:
      - "3003:3001"
    depends_on:
      mongo-db:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4002/graphql"]
      interval: 30s
      timeout: 5s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  mysql_data:
    driver: local
  postgresql_data:
    driver: local
  mongodb_data:
    driver: local

networks:
  app-network:
    driver: bridge